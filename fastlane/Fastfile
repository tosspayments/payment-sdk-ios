fastlane_version "2.127.2"
default_platform :ios

platform :ios do
    before_all do |lane|
        ENV["FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT"] = "120"
        ENV["FASTLANE_XCODE_LIST_TIMEOUT"] = "120"
        puts "[Swift Version] : #{get_swift_version}"
    end

    lane:archive_uikit do
        archive("UIKitExample")
    end

    lane:archive_swiftui do 
        archive("SwiftUI")
    end

    lane:distribution do
        distribution()
    end
end

app_version = ""
def archive(app_name)
    app_version = get_version_number(xcodeproj: "Examples/TossPayments-Examples/#{app_name}/#{app_name}.xcodeproj", target: "#{app_name}")
    number_of_commits = sh("git", "rev-list", "HEAD", "--count").strip.to_i
    build_number = "#{Time.new.strftime("%Y%m%d")}#{number_of_commits}"

    folder_name = "#{app_name}-#{app_version}-#{build_number}"
    build_name = "#{app_name}-#{app_version}-#{build_number}"

    build_options = {
        output_directory: "./build/output",
        build_path: "./build/#{folder_name}/build/",
        buildlog_path: "./build/#{folder_name}/buildlog/",
        derived_data_path: "./build/#{folder_name}/derived_data/",
        output_name: "UIKitExample.ipa",
        clean: true,
        skip_package_ipa: false,
        export_method: "enterprise",
        export_options: {
            signingStyle: 'automatic'
        },
        scheme: "#{app_name}",
        configuration: "Release",
        xcargs: "-allowProvisioningUpdates"
    }

    build_app(build_options)
end

def distribution()
    firebase_app_distribution(
        app: "1:388118058286:ios:fe168c3126d9a32b3d16bf",
        ipa_path: "./output/UIKitExample.ipa",
        service_credentials_file: "./keyfile.json",
        testers: "mqz@toss.im",
        release_notes: "#{app_version} 배포",
        groups: "결제위젯"
    )
end

def get_swift_version()
    return sh("xcrun swift -version").scan(/version\s+([0-9]+(\.[0-9]+)?(\.[0-9]+)?)\s*\(/)[0][0]
end
