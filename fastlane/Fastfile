fastlane_version "2.127.2"
default_platform :ios

require 'json'

TEAM_ID_APPSTORE = "NXA4356DUW"

platform :ios do
    before_all do |lane|
        ENV["FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT"] = "120"
        ENV["FASTLANE_XCODE_LIST_TIMEOUT"] = "120"
        puts "[Swift Version] : #{get_swift_version}"
    end

    lane :update_brandpay_url do |options|
        url = options[:url]
        update_info_plist(
            xcodeproj: "Examples/TossPayments-Examples/UIKitExample/UIKitExample.xcodeproj",
            plist_path: "Derived/InfoPlists/UIKitExample-Info.plist",
            block: lambda { |plist|
                plist["BRANDPAY_REDIRECT_URL"] = url
            }
        )
    end

    lane:archive_uikit do
        archive("UIKitExample")
    end

    lane:archive_swiftui do 
        archive("SwiftUI")
    end
end


def archive(app_name)
    app_version = get_version_number(xcodeproj: "Examples/TossPayments-Examples/#{app_name}/#{app_name}.xcodeproj", target: "#{app_name}")
    number_of_commits = sh("git", "rev-list", "HEAD", "--count").strip.to_i
    build_number = "#{Time.new.strftime("%Y%m%d")}#{number_of_commits}"

    folder_name = "#{app_name}-#{app_version}-#{build_number}"
    build_name = "#{app_name}-#{app_version}-#{build_number}"

    build_options = {
        output_directory: "./build/#{folder_name}/output",
        build_path: "./build/#{folder_name}/build/",
        buildlog_path: "./build/#{folder_name}/buildlog/",
        derived_data_path: "./build/#{folder_name}/derived_data/",
        output_name: "#{build_name}.ipa",
        clean: true,
        skip_package_ipa: false,
        export_method: "ad-hoc",
        scheme: "UIKitExample",
        configuration: "Release",
        xcargs: "-allowProvisioningUpdates"
    }

    print(JSON.pretty_generate(build_options))
    print("\n")

    build_app(build_options)
end

def get_swift_version()
    return sh("xcrun swift -version").scan(/version\s+([0-9]+(\.[0-9]+)?(\.[0-9]+)?)\s*\(/)[0][0]
end
